/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as TeamIndexImport } from './pages/team/index'
import { Route as TeamNewIndexImport } from './pages/team/new/index'
import { Route as TeamEditMemberIdImport } from './pages/team/edit/$memberId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/index.lazy').then((d) => d.Route))

const TeamIndexRoute = TeamIndexImport.update({
  id: '/team/',
  path: '/team/',
  getParentRoute: () => rootRoute,
} as any)

const TeamNewIndexRoute = TeamNewIndexImport.update({
  id: '/team/new/',
  path: '/team/new/',
  getParentRoute: () => rootRoute,
} as any)

const TeamEditMemberIdRoute = TeamEditMemberIdImport.update({
  id: '/team/edit/$memberId',
  path: '/team/edit/$memberId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/team/': {
      id: '/team/'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamIndexImport
      parentRoute: typeof rootRoute
    }
    '/team/edit/$memberId': {
      id: '/team/edit/$memberId'
      path: '/team/edit/$memberId'
      fullPath: '/team/edit/$memberId'
      preLoaderRoute: typeof TeamEditMemberIdImport
      parentRoute: typeof rootRoute
    }
    '/team/new/': {
      id: '/team/new/'
      path: '/team/new'
      fullPath: '/team/new'
      preLoaderRoute: typeof TeamNewIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/team': typeof TeamIndexRoute
  '/team/edit/$memberId': typeof TeamEditMemberIdRoute
  '/team/new': typeof TeamNewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/team': typeof TeamIndexRoute
  '/team/edit/$memberId': typeof TeamEditMemberIdRoute
  '/team/new': typeof TeamNewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/team/': typeof TeamIndexRoute
  '/team/edit/$memberId': typeof TeamEditMemberIdRoute
  '/team/new/': typeof TeamNewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/team' | '/team/edit/$memberId' | '/team/new'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/team' | '/team/edit/$memberId' | '/team/new'
  id: '__root__' | '/' | '/team/' | '/team/edit/$memberId' | '/team/new/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  TeamIndexRoute: typeof TeamIndexRoute
  TeamEditMemberIdRoute: typeof TeamEditMemberIdRoute
  TeamNewIndexRoute: typeof TeamNewIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  TeamIndexRoute: TeamIndexRoute,
  TeamEditMemberIdRoute: TeamEditMemberIdRoute,
  TeamNewIndexRoute: TeamNewIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/team/",
        "/team/edit/$memberId",
        "/team/new/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/team/": {
      "filePath": "team/index.tsx"
    },
    "/team/edit/$memberId": {
      "filePath": "team/edit/$memberId.tsx"
    },
    "/team/new/": {
      "filePath": "team/new/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
